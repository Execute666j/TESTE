-- Carregar a biblioteca Fluent e addons necessários
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Criar a janela principal Fluent
local Window = Fluent:CreateWindow({
    Title = "Mac Hub - Fluent",
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Criar as abas principais
local Tabs = {
    Main = Window:AddTab({ Title = "Main" }),
    Teleport = Window:AddTab({ Title = "Teleporte" }),
    ESP = Window:AddTab({ Title = "ESP" }),
    Inventory = Window:AddTab({ Title = "Inventário" }),
    Kill = Window:AddTab({ Title = "Kill" }),
    Flight = Window:AddTab({ Title = "Fly" }),
    Settings = Window:AddTab({ Title = "Settings" })
}

-- Variável para armazenar jogador selecionado
local selectedPlayer = nil

-- Função para adicionar Dropdown de Seleção de Jogador
local function AddPlayerDropdown(tab)
    local Dropdown = tab:AddDropdown("PlayerDropdown", {
        Title = "Selecionar Jogador",
        Description = "Selecione um jogador para teleportar ou flingar.",
        Values = {}, -- Será preenchido dinamicamente
        Multi = false,
        Default = nil
    })

    -- Atualizar valores do Dropdown
    local function UpdatePlayers()
        local players = {}
        for _, player in pairs(game.Players:GetPlayers()) do
            table.insert(players, player.Name)
        end
        Dropdown:SetValues(players)
    end

    -- Atualizar lista ao carregar
    UpdatePlayers()

    -- Atualizar sempre que um novo jogador entrar
    game.Players.PlayerAdded:Connect(UpdatePlayers)
    game.Players.PlayerRemoving:Connect(UpdatePlayers)

    -- Callback para seleção de jogador
    Dropdown:OnChanged(function(value)
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Name == value then
                selectedPlayer = player
                print("Jogador selecionado: " .. player.Name)
            end
        end
    end)
end

-- Adicionar Dropdown de Seleção na aba Teleport
AddPlayerDropdown(Tabs.Teleport)

-- Botão para teleportar ao jogador selecionado
Tabs.Teleport:AddButton({
    Title = "Teleportar",
    Description = "Teleporta até o jogador selecionado.",
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local localPlayer = game.Players.LocalPlayer
            if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                localPlayer.Character.HumanoidRootPart.CFrame = selectedPlayer.Character.HumanoidRootPart.CFrame
                print("Teleportado para o jogador selecionado.")
            end
        else
            print("Nenhum jogador selecionado ou jogador inválido.")
        end
    end
})

-- Botão para flingar jogador selecionado
Tabs.Teleport:AddButton({
    Title = "Flingar",
    Description = "Flinga o jogador selecionado.",
    Callback = function()
        if selectedPlayer then
            local localPlayer = game.Players.LocalPlayer
            if selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
                localPlayer.Character.HumanoidRootPart.CFrame = selectedPlayer.Character.HumanoidRootPart.CFrame
                print("Flingar iniciado.")
                loadstring(game:HttpGet("https://raw.githubusercontent.com/Execute666j/TESTE/refs/heads/main/FlingAtivar"))()
            else
                print("Jogador inválido para flingar.")
            end
        else
            print("Nenhum jogador selecionado.")
        end
    end
})

-- Botão ESP
Tabs.ESP:AddButton({
    Title = "Ativar ESP",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Execute666j/TESTE/refs/heads/main/ESP"))()
        print("ESP ativado.")
    end
})

-- Botão Kill
Tabs.Kill:AddButton({
    Title = "Kill",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Execute666j/TESTE/refs/heads/main/Kill"))()
        print("Kill ativado.")
    end
})

-- Botão Fly
Tabs.Flight:AddButton({
    Title = "Ativar Fly",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Execute666j/TESTE/refs/heads/main/Fly"))()
        print("Fly ativado.")
    end
})

-- Gerenciamento de inventário
Tabs.Inventory:AddButton({
    Title = "Pegar Todos os Itens",
    Callback = function()
        local player = game.Players.LocalPlayer
        local backpack = player.Backpack
        for _, item in pairs(backpack:GetChildren()) do
            item.Parent = player.Character
        end
        print("Itens movidos para o personagem.")
    end
})

-- Configuração SaveManager e InterfaceManager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:SetFolder("FluentScriptHub")
InterfaceManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

SaveManager:LoadAutoloadConfig()

-- Notificar o usuário
Fluent:Notify({
    Title = "Fluent",
    Content = "O script foi carregado corretamente.",
    Duration = 8
})
